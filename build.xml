<?xml version="1.0" encoding="UTF-8"?>
<project name="moee_zfskeleton" default="build">
    
    <property name="config.file.db" value="config/autoload/database.local.php" />
    
    <property name="src.path" value="./module" />

    <property name="build.path" value="./build" />
    <property name="build.path.phpdoc2" value="${build.path}/phpdoc2" />
    <property name="build.path.phpdepend" value="${build.path}/phpdepend" />
    <property name="build.path.phpcodesniffer" value="${build.path}/phpcodesniffer" />
    <property name="build.path.phpunit" value="${build.path}/phpunit" />
    <property name="build.path.phpcpd" value="${build.path}/phpcpd" />
    <property name="build.path.phploc" value="${build.path}/phploc" />

    <!-- ============================================  -->
    <!-- Target: setup                                 -->
    <!-- ============================================  -->
    <target name="setup">
        <property name="db.mysql.host" value="localhost" />
        <property name="db.mysql.dbname" value="" />
        <property name="db.mysql.username" value="" />
        <echo msg="Setting up" />
        <echo msg="MySQL Setup" />
        <input propertyname="db.mysql.host" promptChar=" >">mysql hostname</input>
        <input propertyname="db.mysql.dbname" promptChar=" >">mysql db name</input>
        <input propertyname="db.mysql.username" promptChar=" >">mysql user</input>
        
        <!-- from http://stackoverflow.com/questions/4907398/find-replace-text-in-file-with-phing -->
        <copy file="${config.file.db}.dist" tofile="${config.file.db}" overwrite="true">
            <filterchain>
                <replacetokens begintoken="%%" endtoken="%%">
                    <token key="dbname" value="${db.mysql.dbname}" />
                    <token key="dbhost" value="${db.mysql.host}" />
                    <token key="dbuser" value="${db.mysql.username}" />
                </replacetokens>
            </filterchain>
        </copy>

        <!-- until phing supports masked inputs, the password has to be entered manually -->
        <echo level="warn" msg="Important! Open the file ${config.file.db} and enter your password." />

    </target>

    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
    <target name="build" depends="clean,phpdoc2,phpdepend,phpcpd,phpunit">
    </target>
    
    <target name="clean">
        <delete dir="${build.path}" includeemptydirs="true" verbose="false" failonerror="true" />
    </target>
 
    <target name="phpdoc2">
        <mkdir dir="${build.path.phpdoc2}" />
        <phpdoc2 title="API Documentation"
            destdir="${build.path.phpdoc2}"
            template="responsive">
            <fileset dir="${src.path}">
                <include name="**/*.php" />
            </fileset>
        </phpdoc2>
    </target>
    
    <target name="phpdepend">
        <mkdir dir="${build.path.phpdepend}" />
        <phpdepend>
            <fileset dir="${src.path}">
                <include name="**/*.php" />
            </fileset>
            <logger type="jdepend-xml" outfile="${build.path.phpdepend}/jdepend.xml"/>
            <logger type="jdepend-chart" outfile="${build.path.phpdepend}/jdepend-chart.png"/>
            <logger type="overview-pyramid" outfile="${build.path.phpdepend}/overview-pyramid.png"/>
            <logger type="phpunit-xml" outfile="${build.path.phpdepend}/phpunit.xml"/>
            <logger type="summary-xml" outfile="${build.path.phpdepend}/summary.xml"/>
            <analyzer type="coderank-mode" value="method"/>
        </phpdepend>
    </target>
    
    <target name="phpcodesniffer">
        <mkdir dir="${build.path.phpcodesniffer}" />
        <phpcodesniffer standard="Zend" showSniffs="true" showWarnings="true">
            <fileset dir="${src.path}">
                <include name="**/*.php"/>
            </fileset>
            <formatter type="default" usefile="false"/>
            <formatter type="checkstyle" outfile="${build.path.phpcodesniffer}/checkstyle.xml"/>
        </phpcodesniffer>
    </target>
    
    <!-- ============================================  -->
    <!-- Target: phpunit                               -->
    <!-- Calls all phpunit tasks in submodules via     -->
    <!-- the phpunit_external task                     -->
    <!-- ============================================  -->
    <target name="phpunit">
        <foreach param="dirname" absparam="buildfile" target="phpunit_external">
            <fileset dir="${src.path}">
                 <patternset>
                      <include name="*/build.xml"/>
                  </patternset>
                <type type="file" />
            </fileset>
        </foreach>
    </target>

    <!-- ============================================  -->
    <!-- Target: phpunit_external                      -->
    <!-- Calls a phpunit task in a submodule           -->
    <!-- ============================================  -->
    <target name="phpunit_external">
        <phing phingfile="${buildfile}" inheritAll="false" inheritRefs="true" target="phpunit" />
    </target>

    <!-- ============================================  -->
    <!-- Target: phpcpd                                -->
    <!-- ============================================  -->
    <target name="phpcpd">
        <mkdir dir="${build.path.phpcpd}" />
        <phpcpd file="${src.path}">
            <formatter type="pmd" outfile="${build.path.phpcpd}/pmd-cpd.xml"/>
        </phpcpd>
    </target>
    
    <!-- ============================================  -->
    <!-- Target: phploc                                -->
    <!-- ============================================  -->
    <target name="phploc">
        <mkdir dir="${build.path.phploc}" />
            <tstamp>
                <format property="check.date.time" pattern="%Y%m%d-%H%M%S" locale="en_US"/>
            </tstamp>
            <phploc reportType="csv" reportName="${check.date.time}-report"
                reportDirectory="${build.path.phploc}">
                <fileset dir="${src.path}">
                    <include name="**/*.php" />
                    <include name="*.php" />
                </fileset>
            </phploc>
    </target>

</project>
